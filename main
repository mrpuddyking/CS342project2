import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.layout.*;
import javafx.stage.Stage;
import javafx.scene.text.Text;  // for rules and odds maybe

import static java.lang.Integer.parseInt;
import static java.lang.String.valueOf;


public class JavaFXTemplate extends Application {


	public static void main(String[] args) {
		// TODO Auto-generated method stub
		launch(args);
	}

	@Override
	public void start(Stage primaryStage) throws Exception {
		mainscreen(primaryStage);

	}

	public void mainscreen(Stage primaryStage){
		BorderPane bp = new BorderPane();

		// Background Image
		Image kenoimg = new Image("prettypic.png");
		BackgroundImage bImg = new BackgroundImage(kenoimg, BackgroundRepeat.NO_REPEAT,
				BackgroundRepeat.NO_REPEAT,
				BackgroundPosition.DEFAULT,
				BackgroundSize.DEFAULT);
		Background bGround = new Background(bImg);
		bp.setBackground(bGround);

		bp.setStyle("-fx-font-family: SansSerif;");
		primaryStage.setTitle("Project#2 Keno");

		// Layout for top
		TextField t1 = new TextField("Menu");
		t1.setEditable(false);
		t1.setStyle("-fx-border-color: red;");
		t1.setStyle("-fx-background-color: darkorange;");
		bp.setTop(t1);

		// buttons
		Button b1 = new Button("Rules");
		Button b2 = new Button("Odds");
		Button b3 = new Button("Start Playing");
		Button b4 = new Button("Exit");
		b1.setStyle("-fx-border-color: purple;");
		b1.setStyle("-fx-background-color: pink;");
		b2.setStyle("-fx-border-color: purple;");
		b2.setStyle("-fx-background-color: pink;");
		b3.setMaxSize(300,300);

		// linking the buttons to eventhandlers
		b1.setOnAction(e->rulesbutton(primaryStage));
		b2.setOnAction(e->oddsbutton(primaryStage));
		b3.setOnAction(e->startplayingbutton(primaryStage));


		// Rules, odds, start playing, exit button
		VBox vbox2 = new VBox(30, b1, b2);
		VBox vbox3 = new VBox(b4);
		VBox vbox1 = new VBox(b3);

		vbox1.setAlignment(Pos.CENTER);
		vbox3.setAlignment(Pos.BOTTOM_RIGHT);
		bp.setCenter(vbox1);
		bp.setLeft(vbox2);
		bp.setRight(vbox3);

		exitbutton(primaryStage, b4); // exit button

		Scene scene = new Scene(bp, 600,600);
		primaryStage.setScene(scene);
		primaryStage.show();
	}

	public void rulesbutton(Stage primaryStage){

		BorderPane bp = new BorderPane();
		bp.setStyle("-fx-font-family: SansSerif;"+"-fx-background-color: lightblue;");

		// The top of borderpane
		TextField t1 = new TextField("Rules");
		t1.setEditable(false);
		t1.setStyle("-fx-border-color: red;");
		t1.setStyle("-fx-background-color: darkorange;");
		bp.setTop(t1);

		// Text
		Text rules1 = new Text();
		Text rules2 = new Text();
		Text rules3 = new Text();
		Text rules4 = new Text();
		Text rules5 = new Text();
		Text rules6 = new Text();
		VBox textvbox = new VBox(rules1, rules2, rules3, rules4, rules5, rules6);
		rules1.setText("Rules of Keno...\n");
		rules2.setText("1) Decide how much to play per draw. Each play costs $1.\n    Play for $2 to double your prize; play for $3 to triple your prize and so on up to $10 per play.\n");
		rules3.setText("2) Select how many consecutive draws to play. Pick up to 4. Drawings happen whenever because we wrote this code. \n");
		rules4.setText("3) Select how many numbers to match.\n    Either 1, 4, 8 or 10 spots ( aka numbers to be picked). \n    The number of Spots you choose and the amount you play per draw will determine the amount you could win.\n    See the odds chart to determine the amount you could win with a $1 play.\n");
		rules5.setText("4) Pick as many numbers as you did Spots. \n    You can select numbers from 1 to 80 or choose Quick Pick and let the computer terminal randomly pick your numbers.\n");
		rules6.setText("5) You cannot change the number of spots or drawings midway through the drawings because that is cheating. \n");
		bp.setLeft(textvbox);

		// Back button
		Button b1 = new Button("Back");
		VBox vbox1 = new VBox(b1);
		vbox1.setAlignment(Pos.BOTTOM_RIGHT);
		bp.setRight(vbox1);

		b1.setOnAction(e->mainscreen(primaryStage));

		Scene scene = new Scene(bp, 800,400);
		primaryStage.setScene(scene);
		primaryStage.show();
	}

	public void oddsbutton(Stage primaryStage){

		BorderPane bp = new BorderPane();
		bp.setStyle("-fx-font-family: SansSerif;"+"-fx-background-color: lightblue;");

		// Top of BorderPane
		TextField t1 = new TextField("Odds");
		t1.setEditable(false);
		t1.setStyle("-fx-border-color: red;");
		t1.setStyle("-fx-background-color: darkorange;");
		bp.setTop(t1);

		// Text
		Text odds1 = new Text();
		Text odds2 = new Text();
		Text odds3 = new Text();
		Text odds4 = new Text();
		Text odds5 = new Text();
		Text odds6 = new Text();
		VBox textvbox = new VBox(odds1, odds2, odds3, odds4, odds5, odds6);
		odds1.setText("Odds of Keno... (21+ only, no gambling kids)\n");
		odds2.setText("\nOdds for 1 spot: \n Match      Prize\n    1              $2\n");
		odds3.setText("\nOdds for 4 spot: \n Match      Prize\n    4              $75\n    3              $5\n    2              $1\n");
		odds4.setText("\nOdds for 8 spot: \n Match      Prize\n    8          $10,000\n    7           $750\n    6            $50\n    5            $12\n    4             $2\n");
		bp.setLeft(textvbox);

		// Back button
		Button b1 = new Button("Back");
		VBox vbox1 = new VBox(b1);
		vbox1.setAlignment(Pos.BOTTOM_RIGHT);
		bp.setRight(vbox1);

		b1.setOnAction(e->mainscreen(primaryStage));

		Scene scene = new Scene(bp, 400,400);
		primaryStage.setScene(scene);
		primaryStage.show();
	}

	public void startplayingbutton(Stage primaryStage) {

		BorderPane bp = new BorderPane();
		bp.setStyle("-fx-font-family: SansSerif;"+"-fx-background-color: black;");

		// Decided against background image for start playing because distracts from choosing numebers
//		// Background Image
//		Image kenoimg = new Image("keno.jpg");
//		BackgroundImage bImg = new BackgroundImage(kenoimg, BackgroundRepeat.NO_REPEAT,
//				BackgroundRepeat.NO_REPEAT,
//				BackgroundPosition.DEFAULT,
//				new BackgroundSize(1.0, 1.0, true, true, false, false));
//		Background bGround = new Background(bImg);
//		bp.setBackground(bGround);

		// Back button
		Button b1 = new Button("Back");
		VBox vbox1 = new VBox(b1);
		vbox1.setAlignment(Pos.BOTTOM_RIGHT);
		bp.setRight(vbox1);

		// button grid
		GridPane gp = new GridPane();
		String a = "1";

		// setting the spacing between buttons
		gp.setHgap(10);
		gp.setVgap(10);

		// creating the buttons and giving numeric names
		for ( int i = 0; i < 8; i++){
			for ( int j = 0; j < 10; j++){
				Button x = new Button(a);
				x.minHeight(10);
				x.minWidth(10);
				gp.add(x, j, i);
				a = increment(a); // brings to function that increments a to next string number.
			}
		}
		gp.setAlignment(Pos.CENTER);
		bp.setRight(gp);


		Scene scene = new Scene(bp, 800, 600);
		primaryStage.setScene(scene);
		primaryStage.show();


	}

	public String increment(String a){
		int b = Integer.parseInt(a);
		b++;
		a = String.valueOf(b);
		return a;
	}

	public void exitbutton(Stage primaryStage, Button b4){
		b4.setOnAction(e-> primaryStage.close());
	}

}

public Scene startplayingbutton(Stage primaryStage) {
		
         Button b10 = new Button("Next");
		
		 Button b6 = new Button("1");
		 Button b7 = new Button("4");
		 Button b8 = new Button("8");
		 Button b9 = new Button("10");
		 TextField t4 = new TextField("Pick number of Spots");
		 HBox Hbox1 = new HBox(b6,b7,b8,b9);
		 Hbox1.setAlignment(Pos.TOP_LEFT);
		
		 b6.setOnAction(e -> {
			 numspots = 1;
		 });
		 b7.setOnAction(e -> {
			numspots = 4;
		 });
		 b8.setOnAction(e ->{
			numspots = 8;
		 });
		 b9.setOnAction(e ->{
			numspots = 10;
		 });
	    
		 Button b11 = new Button("1");
		 Button b12 = new Button("2");
		 Button b13 = new Button("3");
		 Button b14 = new Button("4");
		 TextField t5 = new TextField("Pick number of Drawings");
		 HBox Hbox2 = new HBox(b11,b12,b13,b14);
		 Hbox2.setAlignment(Pos.CENTER_LEFT);
		 VBox vbox1 = new VBox(t4,Hbox1,t5,Hbox2);
		 
		 b11.setOnAction(e -> {
			 numdrawings = 1;
		 });
		 b12.setOnAction(e -> {
			numdrawings = 2;
		 });
		 b13.setOnAction(e ->{
			numdrawings = 3;
		 });
		 b14.setOnAction(e ->{
			numdrawings = 4;
		 });
		
		
		BorderPane bp = new BorderPane();
		bp.setStyle("-fx-font-family: SansSerif;" + "-fx-background-color: lightblue;");
    //    bp.setCenter(Hbox1);
     //   bp.setCenter(Hbox2);
		
	
	//	bp.setTop(t4);
	//	bp.setLeft(t5);
		bp.setRight(b10);
		bp.setCenter(vbox1);
		b10.setOnAction(e -> primaryStage.setScene(startplayingbutton(primaryStage)));
		
		

		
		
		 
		// Back button
		Button b1 = new Button("Back");
		b1.setOnAction(e -> mainscreen(primaryStage));
		bp.setBottom(b1);
		 
		Scene scene = new Scene(bp, 400, 400);
		return scene;
        

	}
	public void potentialwinning(Stage primaryStage) {
		Button b10 = new Button("Next");
		BorderPane bp = new BorderPane();
		bp.setStyle("-fx-font-family: SansSerif;" + "-fx-background-color: blue;");
        HBox Hbox1 = new HBox(b10);
        Hbox1.setAlignment(Pos.TOP_LEFT);
        bp.setCenter(Hbox1);
	}

}
